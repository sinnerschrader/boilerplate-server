/*
 * Load, schedule and run the default hooks
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
	value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _path = require('path');

var _load = require('./load');

var _load2 = _interopRequireDefault(_load);

function createHooks(application) {
	application.hooks = (0, _load2['default'])(application, (0, _path.resolve)(application.runtime.base, 'application', 'hooks'));

	application.hooks.forEach(function registerCoreHook(hook) {
		hook.register(application);
	});

	application.emit('application:before');

	return new Promise(function resolveHooks(fulfill) {
		application.on('hooks:start:after', function onAfterHookStart() {
			var remaining = application.hooks.filter(function (hook) {
				return hook.wait && hook.stages.start === false && hook.disabled === false;
			});

			if (remaining.length === 0) {
				application.emit('application:after');
				application.log.debug('[application:hooks]', 'All core hooks executed');

				application.removeListener('hooks:start:after', onAfterHookStart);
				fulfill(application);
			}
		});
	});
}

exports['default'] = createHooks;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NvdXJjZS9saWJyYXJ5L2hvb2tzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztvQkFJd0IsTUFBTTs7b0JBQ2IsUUFBUTs7OztBQUV6QixTQUFTLFdBQVcsQ0FBRyxXQUFXLEVBQUc7QUFDcEMsWUFBVyxDQUFDLEtBQUssR0FBRyx1QkFBTSxXQUFXLEVBQUUsVUFKL0IsT0FBTyxFQUlpQyxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxhQUFhLEVBQUUsT0FBTyxDQUFFLENBQUUsQ0FBQzs7QUFFckcsWUFBVyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUUsU0FBUyxnQkFBZ0IsQ0FBRyxJQUFJLEVBQUc7QUFDN0QsTUFBSSxDQUFDLFFBQVEsQ0FBRSxXQUFXLENBQUUsQ0FBQztFQUM3QixDQUFFLENBQUM7O0FBRUosWUFBVyxDQUFDLElBQUksQ0FBRSxvQkFBb0IsQ0FBRSxDQUFDOztBQUV6QyxRQUFPLElBQUksT0FBTyxDQUFFLFNBQVMsWUFBWSxDQUFHLE9BQU8sRUFBRztBQUNyRCxhQUFXLENBQUMsRUFBRSxDQUFFLG1CQUFtQixFQUFFLFNBQVMsZ0JBQWdCLEdBQUk7QUFDakUsT0FBSSxTQUFTLEdBQUcsV0FBVyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUUsVUFBRSxJQUFJO1dBQU0sSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssS0FBSyxLQUFLLElBQUksSUFBSSxDQUFDLFFBQVEsS0FBSyxLQUFLO0lBQUEsQ0FBRSxDQUFDOztBQUU1SCxPQUFLLFNBQVMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFHO0FBQzdCLGVBQVcsQ0FBQyxJQUFJLENBQUUsbUJBQW1CLENBQUUsQ0FBQztBQUN4QyxlQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBRSxxQkFBcUIsRUFBRSx5QkFBeUIsQ0FBRSxDQUFDOztBQUUxRSxlQUFXLENBQUMsY0FBYyxDQUFFLG1CQUFtQixFQUFFLGdCQUFnQixDQUFFLENBQUM7QUFDcEUsV0FBTyxDQUFFLFdBQVcsQ0FBRSxDQUFDO0lBQ3ZCO0dBQ0QsQ0FBRSxDQUFDO0VBQ0osQ0FBRSxDQUFDO0NBQ0o7O3FCQUVjLFdBQVciLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogTG9hZCwgc2NoZWR1bGUgYW5kIHJ1biB0aGUgZGVmYXVsdCBob29rc1xuICovXG5cbmltcG9ydCB7IHJlc29sdmUgfSBmcm9tICdwYXRoJztcbmltcG9ydCBsb2FkIGZyb20gJy4vbG9hZCc7XG5cbmZ1bmN0aW9uIGNyZWF0ZUhvb2tzICggYXBwbGljYXRpb24gKSB7XG5cdGFwcGxpY2F0aW9uLmhvb2tzID0gbG9hZCggYXBwbGljYXRpb24sIHJlc29sdmUoIGFwcGxpY2F0aW9uLnJ1bnRpbWUuYmFzZSwgJ2FwcGxpY2F0aW9uJywgJ2hvb2tzJyApICk7XG5cblx0YXBwbGljYXRpb24uaG9va3MuZm9yRWFjaCggZnVuY3Rpb24gcmVnaXN0ZXJDb3JlSG9vayAoIGhvb2sgKSB7XG5cdFx0aG9vay5yZWdpc3RlciggYXBwbGljYXRpb24gKTtcblx0fSApO1xuXG5cdGFwcGxpY2F0aW9uLmVtaXQoICdhcHBsaWNhdGlvbjpiZWZvcmUnICk7XG5cblx0cmV0dXJuIG5ldyBQcm9taXNlKCBmdW5jdGlvbiByZXNvbHZlSG9va3MgKCBmdWxmaWxsICkge1xuXHRcdGFwcGxpY2F0aW9uLm9uKCAnaG9va3M6c3RhcnQ6YWZ0ZXInLCBmdW5jdGlvbiBvbkFmdGVySG9va1N0YXJ0ICgpIHtcblx0XHRcdHZhciByZW1haW5pbmcgPSBhcHBsaWNhdGlvbi5ob29rcy5maWx0ZXIoICggaG9vayApID0+IGhvb2sud2FpdCAmJiBob29rLnN0YWdlcy5zdGFydCA9PT0gZmFsc2UgJiYgaG9vay5kaXNhYmxlZCA9PT0gZmFsc2UgKTtcblxuXHRcdFx0aWYgKCByZW1haW5pbmcubGVuZ3RoID09PSAwICkge1xuXHRcdFx0XHRhcHBsaWNhdGlvbi5lbWl0KCAnYXBwbGljYXRpb246YWZ0ZXInICk7XG5cdFx0XHRcdGFwcGxpY2F0aW9uLmxvZy5kZWJ1ZyggJ1thcHBsaWNhdGlvbjpob29rc10nLCAnQWxsIGNvcmUgaG9va3MgZXhlY3V0ZWQnICk7XG5cblx0XHRcdFx0YXBwbGljYXRpb24ucmVtb3ZlTGlzdGVuZXIoICdob29rczpzdGFydDphZnRlcicsIG9uQWZ0ZXJIb29rU3RhcnQgKTtcblx0XHRcdFx0ZnVsZmlsbCggYXBwbGljYXRpb24gKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0gKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlSG9va3M7XG4iXX0=