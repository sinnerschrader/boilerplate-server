/*
 * Load, schedule and run the default hooks
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
	value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _path = require('path');

var _load = require('./load');

var _load2 = _interopRequireDefault(_load);

function createHooks(application) {
	application.hooks = (0, _load2['default'])(application, (0, _path.resolve)(application.runtime.base, 'application', 'hooks'));

	application.hooks.forEach(function registerCoreHook(hook) {
		hook.register(application);
	});

	application.emit('application:before');

	return new Promise(function resolveHooks(fulfill) {
		application.on('hooks:start:after', function onAfterHookStart() {
			var remaining = application.hooks.filter(function (hook) {
				return hook.wait && hook.stages.start === false && hook.disabled === false;
			});

			if (remaining.length === 0) {
				application.emit('application:after');
				application.log.debug('[application:hooks]', 'All core hooks executed');

				application.removeListener('hooks:start:after', onAfterHookStart);
				fulfill(application);
			}
		});
	});
}

exports['default'] = createHooks;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NvdXJjZS9saWJyYXJ5L2hvb2tzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztvQkFJd0IsTUFBTTs7b0JBQ2IsUUFBUTs7OztBQUV6QixTQUFTLFdBQVcsQ0FBRyxXQUFXLEVBQUc7QUFDcEMsWUFBVyxDQUFDLEtBQUssR0FBRyx1QkFBTSxXQUFXLEVBQUUsbUJBQVMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsYUFBYSxFQUFFLE9BQU8sQ0FBRSxDQUFFLENBQUM7O0FBRXJHLFlBQVcsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFFLFNBQVMsZ0JBQWdCLENBQUcsSUFBSSxFQUFHO0FBQzdELE1BQUksQ0FBQyxRQUFRLENBQUUsV0FBVyxDQUFFLENBQUM7RUFDN0IsQ0FBRSxDQUFDOztBQUVKLFlBQVcsQ0FBQyxJQUFJLENBQUUsb0JBQW9CLENBQUUsQ0FBQzs7QUFFekMsUUFBTyxJQUFJLE9BQU8sQ0FBRSxTQUFTLFlBQVksQ0FBRyxPQUFPLEVBQUc7QUFDckQsYUFBVyxDQUFDLEVBQUUsQ0FBRSxtQkFBbUIsRUFBRSxTQUFTLGdCQUFnQixHQUFJO0FBQ2pFLE9BQUksU0FBUyxHQUFHLFdBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFFLFVBQUUsSUFBSTtXQUFNLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxJQUFJLElBQUksQ0FBQyxRQUFRLEtBQUssS0FBSztJQUFBLENBQUUsQ0FBQzs7QUFFNUgsT0FBSyxTQUFTLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRztBQUM3QixlQUFXLENBQUMsSUFBSSxDQUFFLG1CQUFtQixDQUFFLENBQUM7QUFDeEMsZUFBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUUscUJBQXFCLEVBQUUseUJBQXlCLENBQUUsQ0FBQzs7QUFFMUUsZUFBVyxDQUFDLGNBQWMsQ0FBRSxtQkFBbUIsRUFBRSxnQkFBZ0IsQ0FBRSxDQUFDO0FBQ3BFLFdBQU8sQ0FBRSxXQUFXLENBQUUsQ0FBQztJQUN2QjtHQUNELENBQUUsQ0FBQztFQUNKLENBQUUsQ0FBQztDQUNKOztxQkFFYyxXQUFXIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIExvYWQsIHNjaGVkdWxlIGFuZCBydW4gdGhlIGRlZmF1bHQgaG9va3NcbiAqL1xuXG5pbXBvcnQgeyByZXNvbHZlIH0gZnJvbSAncGF0aCc7XG5pbXBvcnQgbG9hZCBmcm9tICcuL2xvYWQnO1xuXG5mdW5jdGlvbiBjcmVhdGVIb29rcyAoIGFwcGxpY2F0aW9uICkge1xuXHRhcHBsaWNhdGlvbi5ob29rcyA9IGxvYWQoIGFwcGxpY2F0aW9uLCByZXNvbHZlKCBhcHBsaWNhdGlvbi5ydW50aW1lLmJhc2UsICdhcHBsaWNhdGlvbicsICdob29rcycgKSApO1xuXG5cdGFwcGxpY2F0aW9uLmhvb2tzLmZvckVhY2goIGZ1bmN0aW9uIHJlZ2lzdGVyQ29yZUhvb2sgKCBob29rICkge1xuXHRcdGhvb2sucmVnaXN0ZXIoIGFwcGxpY2F0aW9uICk7XG5cdH0gKTtcblxuXHRhcHBsaWNhdGlvbi5lbWl0KCAnYXBwbGljYXRpb246YmVmb3JlJyApO1xuXG5cdHJldHVybiBuZXcgUHJvbWlzZSggZnVuY3Rpb24gcmVzb2x2ZUhvb2tzICggZnVsZmlsbCApIHtcblx0XHRhcHBsaWNhdGlvbi5vbiggJ2hvb2tzOnN0YXJ0OmFmdGVyJywgZnVuY3Rpb24gb25BZnRlckhvb2tTdGFydCAoKSB7XG5cdFx0XHR2YXIgcmVtYWluaW5nID0gYXBwbGljYXRpb24uaG9va3MuZmlsdGVyKCAoIGhvb2sgKSA9PiBob29rLndhaXQgJiYgaG9vay5zdGFnZXMuc3RhcnQgPT09IGZhbHNlICYmIGhvb2suZGlzYWJsZWQgPT09IGZhbHNlICk7XG5cblx0XHRcdGlmICggcmVtYWluaW5nLmxlbmd0aCA9PT0gMCApIHtcblx0XHRcdFx0YXBwbGljYXRpb24uZW1pdCggJ2FwcGxpY2F0aW9uOmFmdGVyJyApO1xuXHRcdFx0XHRhcHBsaWNhdGlvbi5sb2cuZGVidWcoICdbYXBwbGljYXRpb246aG9va3NdJywgJ0FsbCBjb3JlIGhvb2tzIGV4ZWN1dGVkJyApO1xuXG5cdFx0XHRcdGFwcGxpY2F0aW9uLnJlbW92ZUxpc3RlbmVyKCAnaG9va3M6c3RhcnQ6YWZ0ZXInLCBvbkFmdGVySG9va1N0YXJ0ICk7XG5cdFx0XHRcdGZ1bGZpbGwoIGFwcGxpY2F0aW9uICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9ICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZUhvb2tzO1xuIl19